// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rand/rand.proto

package rand

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RandRequest struct {
	Max                  int64    `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandRequest) Reset()         { *m = RandRequest{} }
func (m *RandRequest) String() string { return proto.CompactTextString(m) }
func (*RandRequest) ProtoMessage()    {}
func (*RandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e05171e3a32769b, []int{0}
}

func (m *RandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandRequest.Unmarshal(m, b)
}
func (m *RandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandRequest.Marshal(b, m, deterministic)
}
func (m *RandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandRequest.Merge(m, src)
}
func (m *RandRequest) XXX_Size() int {
	return xxx_messageInfo_RandRequest.Size(m)
}
func (m *RandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RandRequest proto.InternalMessageInfo

func (m *RandRequest) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type RandResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandResponse) Reset()         { *m = RandResponse{} }
func (m *RandResponse) String() string { return proto.CompactTextString(m) }
func (*RandResponse) ProtoMessage()    {}
func (*RandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e05171e3a32769b, []int{1}
}

func (m *RandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandResponse.Unmarshal(m, b)
}
func (m *RandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandResponse.Marshal(b, m, deterministic)
}
func (m *RandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandResponse.Merge(m, src)
}
func (m *RandResponse) XXX_Size() int {
	return xxx_messageInfo_RandResponse.Size(m)
}
func (m *RandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RandResponse proto.InternalMessageInfo

func (m *RandResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*RandRequest)(nil), "RandRequest")
	proto.RegisterType((*RandResponse)(nil), "RandResponse")
}

func init() { proto.RegisterFile("proto/rand/rand.proto", fileDescriptor_2e05171e3a32769b) }

var fileDescriptor_2e05171e3a32769b = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4a, 0xcc, 0x4b, 0x01, 0x13, 0x7a, 0x60, 0xbe, 0x92, 0x3c, 0x17, 0x77, 0x50,
	0x62, 0x5e, 0x4a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x00, 0x17, 0x73, 0x6e, 0x62,
	0x85, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x88, 0xa9, 0xa4, 0xc6, 0xc5, 0x03, 0x51, 0x50,
	0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c, 0x9a, 0x53, 0x02,
	0x55, 0x04, 0xe5, 0x19, 0x19, 0x70, 0xb1, 0x80, 0xd4, 0x09, 0x69, 0x70, 0xb1, 0xbb, 0xa7, 0x96,
	0x80, 0x99, 0x3c, 0x7a, 0x48, 0x46, 0x4b, 0xf1, 0xea, 0x21, 0x9b, 0xa3, 0xc4, 0x90, 0xc4, 0x06,
	0x76, 0x81, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xa9, 0x59, 0x3f, 0x9a, 0x00, 0x00, 0x00,
}
